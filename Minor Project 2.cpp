----------------------------------------------------------------------------------------------------------------------

Question: why we needed to get author and save author and then set author again to make this work
Why we were getting error with this code {
    Book book = bookRequest.to();
    br.save(book)
}

@Service
public class BookService {

    @Autowired
    AuthorRepository ar;

    @Autowired
    BookRepository br;

    public void create(BookRequest bookRequest){
        Book book = bookRequest.to();
        Author author = book.getAuthor();
        Author newAuthor = ar.save(author);
        book.setAuthor(newAuthor);
        br.save(book);
    }


}

When we save book directly in the DB we are also saving the author with that so, things which are generated by jpa/hibernate
like ID did not get generated and author is saved without id which is essential so you get the error.

So, we need to save the author first the set the author to the book and then save the book so both entities are saved in their
respective repositories.

So, Due to the foreign key being null we got the error.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Question: In the above code when we will add 2 books with same author details it will save 2 books in the table and 2 authors in the table but
it ideally should save only 1 author as both authors are same so, we need to add validation here to check if the author is already present in the table
and if its present we will not save the author again?

We will make email attribute in author class and make it unique and notBlank.
On the basis of the email we will validate weather the author is alredy present in the DB or not.
If the author is present we will not save the author, If its not present we will save it.

@Service
public class BookService {

    @Autowired
    AuthorRepository ar;

    @Autowired
    BookRepository br;

    public void create(BookRequest bookRequest){
        Book book = bookRequest.to();
        
        Author author = book.getAuthor();
        Author authorDb = ar.findByEmail(author.getEmail());

        if(authorDb==null) {
            authorDb = ar.save(author);
        }
        
        book.setAuthor(authorDb);
        br.save(book);
    }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------